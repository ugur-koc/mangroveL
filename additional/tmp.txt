scan-build: Using '/usr/local/bin/clang-3.9' for static analysis
CWE401_Memory_Leak__char_calloc_05.c:69:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_calloc_05.c:96:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_calloc_07.c:68:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_calloc_07.c:95:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_calloc_09.c:63:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_calloc_10.c:63:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_calloc_10.c:90:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_calloc_11.c:63:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_calloc_11.c:90:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_calloc_14.c:63:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_calloc_14.c:90:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_calloc_31.c:57:16: warning: Value stored to 'data' during its initialization is never read
        char * data = dataCopy;
               ^~~~   ~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_calloc_32.c:58:16: warning: Value stored to 'data' during its initialization is never read
        char * data = *dataPtr1;
               ^~~~   ~~~~~~~~~
CWE401_Memory_Leak__char_calloc_32.c:67:16: warning: Value stored to 'data' during its initialization is never read
        char * data = *dataPtr2;
               ^~~~   ~~~~~~~~~
CWE401_Memory_Leak__char_calloc_32.c:81:16: warning: Value stored to 'data' during its initialization is never read
        char * data = *dataPtr1;
               ^~~~   ~~~~~~~~~
3 warnings generated.
CWE401_Memory_Leak__char_calloc_34.c:65:16: warning: Value stored to 'data' during its initialization is never read
        char * data = myUnion.unionSecond;
               ^~~~   ~~~~~~~~~~~~~~~~~~~
CWE401_Memory_Leak__char_calloc_34.c:84:9: warning: Potential leak of memory pointed to by 'myUnion.unionFirst'
        char * data = myUnion.unionSecond;
        ^~~~~~~~~~~
2 warnings generated.
CWE401_Memory_Leak__char_calloc_42.c:55:5: warning: Address of stack memory allocated by call to alloca() on line 51 returned to caller
    return data;
    ^~~~~~~~~~~
CWE401_Memory_Leak__char_calloc_42.c:62:5: warning: Value stored to 'data' is never read
    data = goodG2BSource(data);
    ^      ~~~~~~~~~~~~~~~~~~~
2 warnings generated.
CWE401_Memory_Leak__char_calloc_45.c:55:12: warning: Value stored to 'data' during its initialization is never read
    char * data = CWE401_Memory_Leak__char_calloc_45_goodG2BData;
           ^~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CWE401_Memory_Leak__char_calloc_45.c:70:5: warning: Address of stack memory allocated by call to alloca() on line 65 is still referred to by the global variable 'CWE401_Memory_Leak__char_calloc_45_goodG2BData' upon returning to the caller.  This will be a dangling reference
    goodG2BSink();
    ^~~~~~~~~~~~~
2 warnings generated.
CWE401_Memory_Leak__char_calloc_61a.c:47:5: warning: Value stored to 'data' is never read
    data = CWE401_Memory_Leak__char_calloc_61b_goodG2BSource(data);
    ^      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_calloc_61b.c:46:5: warning: Address of stack memory allocated by call to alloca() on line 42 returned to caller
    return data;
    ^~~~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_calloc_63b.c:38:12: warning: Value stored to 'data' during its initialization is never read
    char * data = *dataPtr;
           ^~~~   ~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_calloc_64b.c:44:12: warning: Value stored to 'data' during its initialization is never read
    char * data = (*dataPtr);
           ^~~~   ~~~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_calloc_66b.c:39:12: warning: Value stored to 'data' during its initialization is never read
    char * data = dataArray[2];
           ^~~~   ~~~~~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_calloc_67b.c:43:12: warning: Value stored to 'data' during its initialization is never read
    char * data = myStruct.structFirst;
           ^~~~   ~~~~~~~~~~~~~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_calloc_68b.c:42:12: warning: Value stored to 'data' during its initialization is never read
    char * data = CWE401_Memory_Leak__char_calloc_68_goodG2BData;
           ^~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_malloc_05.c:69:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_malloc_05.c:96:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_malloc_07.c:68:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_malloc_07.c:95:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_malloc_09.c:63:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_malloc_10.c:63:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_malloc_10.c:90:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_malloc_11.c:63:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_malloc_11.c:90:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_malloc_14.c:63:9: warning: Potential leak of memory pointed to by 'data'
        printLine("Benign, fixed string");
        ^~~~~~~~~
CWE401_Memory_Leak__char_malloc_14.c:90:1: warning: Potential leak of memory pointed to by 'data'
}
^
2 warnings generated.
CWE401_Memory_Leak__char_malloc_31.c:57:16: warning: Value stored to 'data' during its initialization is never read
        char * data = dataCopy;
               ^~~~   ~~~~~~~~
1 warning generated.
CWE401_Memory_Leak__char_malloc_32.c:58:16: warning: Value stored to 'data' during its initialization is never read
        char * data = *dataPtr1;
               ^~~~   ~~~~~~~~~
CWE401_Memory_Leak__char_malloc_32.c:67:16: warning: Value stored to 'data' during its initialization is never read
        char * data = *dataPtr2;
               ^~~~   ~~~~~~~~~
CWE401_Memory_Leak__char_malloc_32.c:81:16: warning: Value stored to 'data' during its initialization is never read
        char * data = *dataPtr1;
               ^~~~   ~~~~~~~~~
3 warnings generated.
CWE401_Memory_Leak__char_malloc_34.c:65:16: warning: Value stored to 'data' during its initialization is never read
        char * data = myUnion.unionSecond;
               ^~~~   ~~~~~~~~~~~~~~~~~~~
CWE401_Memory_Leak__char_malloc_34.c:84:9: warning: Potential leak of memory pointed to by 'myUnion.unionFirst'
        char * data = myUnion.unionSecond;
        ^~~~~~~~~~~
2 warnings generated.
CWE401_Memory_Leak__char_malloc_42.c:55:5: warning: Address of stack memory allocated by call to alloca() on line 51 returned to caller
    return data;
    ^~~~~~~~~~~
CWE401_Memory_Leak__char_malloc_42.c:62:5: warning: Value stored to 'data' is never read
    data = goodG2BSource(data);
    ^      ~~~~~~~~~~~~~~~~~~~
2 warnings generated.
clang version 3.9.0 (trunk 259948)
Target: x86_64-apple-darwin15.3.0
Thread model: posix
InstalledDir: /usr/local/bin
 "/usr/local/bin/clang-3.9" "-cc1" "-triple" "x86_64-apple-macosx10.11.0" "-Wdeprecated-objc-isa-usage" "-Werror=deprecated-objc-isa-usage" "-analyze" "-disable-free" "-main-file-name" "CWE401_Memory_Leak__char_malloc_45.c" "-analyzer-store=region" "-analyzer-opt-analyze-nested-blocks" "-analyzer-eagerly-assume" "-analyzer-checker=core" "-analyzer-checker=unix" "-analyzer-checker=osx" "-analyzer-checker=deadcode" "-analyzer-checker=security.insecureAPI.UncheckedReturn" "-analyzer-checker=security.insecureAPI.getpw" "-analyzer-checker=security.insecureAPI.gets" "-analyzer-checker=security.insecureAPI.mktemp" "-analyzer-checker=security.insecureAPI.mkstemp" "-analyzer-checker=security.insecureAPI.vfork" "-analyzer-checker=nullability.NullPassedToNonnull" "-analyzer-checker=nullability.NullReturnedFromNonnull" "-analyzer-output" "plist" "-w" "-mrelocation-model" "pic" "-pic-level" "2" "-mthread-model" "posix" "-mdisable-fp-elim" "-masm-verbose" "-munwind-tables" "-target-cpu" "core2" "-target-linker-version" "253.9" "-dwarf-column-info" "-debugger-tuning=lldb" "-resource-dir" "/usr/local/bin/../lib/clang/3.9.0" "-isysroot" "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk" "-I" "../../../testcasesupport" "-D" "OMITBAD" "-fdebug-compilation-dir" "/Users/ugurmeryem/Juliet/testcases/CWE401_Memory_Leak/s01" "-ferror-limit" "19" "-fmessage-length" "0" "-stack-protector" "1" "-fblocks" "-fobjc-runtime=macosx-10.11.0" "-fencode-extended-block-signature" "-fmax-type-align=16" "-fdiagnostics-show-option" "-analyzer-output=html" "-o" "/var/folders/f7/rzdyhd9x2bd39zsnq6ys_5fr0000gn/T/scan-build-2016-02-10-192907-52799-1" "-x" "c" "CWE401_Memory_Leak__char_malloc_45.c"
could not find clang line
scan-build: 47 bugs found.
scan-build: Run 'scan-view /var/folders/f7/rzdyhd9x2bd39zsnq6ys_5fr0000gn/T/scan-build-2016-02-10-192907-52799-1' to examine bug reports.
