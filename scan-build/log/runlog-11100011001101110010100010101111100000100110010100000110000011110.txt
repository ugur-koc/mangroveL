===< 72153 >===
running 3 interestingness tests in parallel
===< pass_clang_binsrch :: replace-function-def-with-decl >===
===< pass_clang_binsrch :: remove-unused-function >===
(12.8 %, 245 bytes)
===< pass_clang :: remove-namespace >===
===< pass_clang :: param-to-local >===
===< pass_clang :: remove-nested-function >===
===< pass_clang :: return-void >===
(14.2 %, 241 bytes)
===< pass_clang :: simple-inliner >===
(8.5 %, 257 bytes)
===< pass_clang :: copy-propagation >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang :: simplify-if >===
(5.0 %, 267 bytes)
===< pass_clang :: reduce-array-size >===
===< pass_clang :: move-function-body >===
===< pass_clang :: simplify-comma-expr >===
===< pass_clang :: simplify-dependent-typedef >===
===< pass_clang :: replace-simple-typedef >===
===< pass_clang :: template-arg-to-int >===
===< pass_clang :: remove-trivial-base-template >===
===< pass_clang :: class-template-to-class >===
===< pass_clang :: remove-unresolved-base >===
===< pass_clang :: replace-class-with-base-template-spec >===
===< pass_clang :: remove-array >===
===< pass_clang :: remove-addr-taken >===
===< pass_clang :: rename-param >===
===< pass_clang :: rename-var >===
===< pass_clang :: rename-cxx-method >===
===< pass_clang :: combine-global-var >===
===< pass_clang :: combine-local-var >===
===< pass_clang :: simplify-struct-union-decl >===
===< pass_clang :: move-global-var >===
Termination check: size was 281; now 267
===< pass_clang_binsrch :: replace-function-def-with-decl >===
===< pass_clang_binsrch :: remove-unused-function >===
===< pass_clang :: remove-namespace >===
===< pass_clang :: param-to-local >===
===< pass_clang :: remove-nested-function >===
===< pass_clang :: return-void >===
===< pass_clang :: simple-inliner >===
===< pass_clang :: copy-propagation >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang :: simplify-if >===
===< pass_clang :: reduce-array-size >===
===< pass_clang :: move-function-body >===
===< pass_clang :: simplify-comma-expr >===
===< pass_clang :: simplify-dependent-typedef >===
===< pass_clang :: replace-simple-typedef >===
===< pass_clang :: template-arg-to-int >===
===< pass_clang :: remove-trivial-base-template >===
===< pass_clang :: class-template-to-class >===
===< pass_clang :: remove-unresolved-base >===
===< pass_clang :: replace-class-with-base-template-spec >===
===< pass_clang :: remove-array >===
===< pass_clang :: remove-addr-taken >===
===< pass_clang :: rename-param >===
===< pass_clang :: rename-var >===
===< pass_clang :: rename-cxx-method >===
===< pass_clang :: combine-global-var >===
===< pass_clang :: combine-local-var >===
===< pass_clang :: simplify-struct-union-decl >===
===< pass_clang :: move-global-var >===
Termination check: size was 267; now 267
===================== done ====================

pass statistics:
  method pass_clang :: class-template-to-class worked 0 times and failed 0 times
  method pass_clang :: combine-global-var worked 0 times and failed 0 times
  method pass_clang :: combine-local-var worked 0 times and failed 0 times
  method pass_clang :: copy-propagation worked 0 times and failed 0 times
  method pass_clang :: move-function-body worked 0 times and failed 0 times
  method pass_clang :: move-global-var worked 0 times and failed 0 times
  method pass_clang :: param-to-local worked 0 times and failed 0 times
  method pass_clang :: reduce-array-size worked 0 times and failed 0 times
  method pass_clang :: remove-addr-taken worked 0 times and failed 0 times
  method pass_clang :: remove-array worked 0 times and failed 0 times
  method pass_clang :: remove-enum-member-value worked 0 times and failed 0 times
  method pass_clang :: remove-namespace worked 0 times and failed 0 times
  method pass_clang :: remove-nested-function worked 0 times and failed 0 times
  method pass_clang :: remove-trivial-base-template worked 0 times and failed 0 times
  method pass_clang :: remove-unresolved-base worked 0 times and failed 0 times
  method pass_clang :: rename-cxx-method worked 0 times and failed 0 times
  method pass_clang :: rename-param worked 0 times and failed 0 times
  method pass_clang :: rename-var worked 0 times and failed 0 times
  method pass_clang :: replace-callexpr worked 0 times and failed 0 times
  method pass_clang :: replace-class-with-base-template-spec worked 0 times and failed 0 times
  method pass_clang :: replace-simple-typedef worked 0 times and failed 0 times
  method pass_clang :: return-void worked 1 times and failed 0 times
  method pass_clang :: simple-inliner worked 1 times and failed 0 times
  method pass_clang :: simplify-comma-expr worked 0 times and failed 0 times
  method pass_clang :: simplify-dependent-typedef worked 0 times and failed 0 times
  method pass_clang :: simplify-if worked 1 times and failed 0 times
  method pass_clang :: simplify-struct-union-decl worked 0 times and failed 0 times
  method pass_clang :: template-arg-to-int worked 0 times and failed 0 times
  method pass_clang_binsrch :: remove-unused-function worked 1 times and failed 0 times
  method pass_clang_binsrch :: replace-function-def-with-decl worked 0 times and failed 2 times


          '/Users/ugurmeryem/Dropbox/mangroveL/scan-build/sample.c' reduced to:
#include <stdlib.h>
#include <stdio.h>





void  main() {
   {
      int * p = (int *)malloc(10 * sizeof(int));
      int r = rand() % 10;
      r>10;
      
      {
         free(p);
     	}
      free(p);
      printf("Done!\n");
   }
   
   ;
   //bar();
    0;
}