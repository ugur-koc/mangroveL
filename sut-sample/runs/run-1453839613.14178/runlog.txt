===< 84282 >===
running 3 interestingness tests in parallel
===< pass_includes :: 0 >===
(7.1 %, 261 bytes)
(13.9 %, 242 bytes)
===< pass_unifdef :: 0 >===
===< pass_comments :: 0 >===
(16.0 %, 236 bytes)
===< pass_blank :: 0 >===
(18.9 %, 228 bytes)
===< pass_clang_binsrch :: replace-function-def-with-decl >===
===< pass_clang_binsrch :: remove-unused-function >===
(31.7 %, 192 bytes)
===< pass_lines :: 0 >===
(31.3 %, 193 bytes)
===< pass_lines :: 0 >===
(31.0 %, 194 bytes)
===< pass_lines :: 1 >===
(27.4 %, 204 bytes)
(32.4 %, 190 bytes)
(36.3 %, 179 bytes)
(44.5 %, 156 bytes)
===< pass_lines :: 1 >===
(42.0 %, 163 bytes)
===< pass_lines :: 2 >===
(38.8 %, 172 bytes)
===< pass_lines :: 2 >===
(35.6 %, 181 bytes)
===< pass_lines :: 10 >===
(32.4 %, 190 bytes)
===< pass_lines :: 10 >===
(29.2 %, 199 bytes)
===< pass_clang_binsrch :: replace-function-def-with-decl >===
===< pass_clang_binsrch :: remove-unused-function >===
===< pass_lines :: 0 >===
(28.8 %, 200 bytes)
===< pass_lines :: 1 >===
(26.3 %, 207 bytes)
===< pass_lines :: 2 >===
(23.1 %, 216 bytes)
===< pass_lines :: 10 >===
(19.9 %, 225 bytes)
===< pass_clang :: remove-unused-function >===
===< pass_balanced :: curly >===
===< pass_balanced :: curly2 >===
===< pass_balanced :: curly3 >===
===< pass_clang :: callexpr-to-value >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: simplify-callexpr >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang :: remove-unused-var >===
===< pass_special :: a >===
===< pass_special :: b >===
===< pass_special :: c >===
===< pass_ternary :: b >===
===< pass_balanced :: curly2 >===
===< pass_balanced :: parens >===
(21.7 %, 220 bytes)
===< pass_balanced :: angles >===
===< pass_balanced :: curly-only >===
(22.4 %, 218 bytes)
===< pass_clang :: remove-namespace >===
===< pass_clang :: aggregate-to-scalar >===
===< pass_clang :: local-to-global >===
===< pass_clang :: param-to-local >===
===< pass_clang :: simple-inliner >===
===< pass_clang :: reduce-pointer-level >===
===< pass_clang :: lift-assignment-expr >===
===< pass_clang :: copy-propagation >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-unused-var >===
===< pass_clang :: move-function-body >===
===< pass_clang :: simplify-comma-expr >===
===< pass_clang :: replace-dependent-typedef >===
===< pass_clang :: replace-one-level-typedef-type >===
===< pass_clang :: instantiate-template-type-param-to-int >===
===< pass_clang :: instantiate-template-param >===
===< pass_clang :: template-arg-to-int >===
===< pass_clang :: reduce-class-template-param >===
===< pass_clang :: class-template-to-class >===
===< pass_clang :: remove-base-class >===
===< pass_clang :: empty-struct-to-int >===
===< pass_clang :: replace-undefined-function >===
===< pass_clang :: replace-array-index-var >===
===< pass_clang :: replace-dependent-name >===
===< pass_clang :: simplify-recursive-template-instantiation >===
===< pass_lines :: 2 >===
(20.3 %, 224 bytes)
===< pass_lines :: 10 >===
(17.8 %, 231 bytes)
===< pass_peep :: a >===
(20.6 %, 223 bytes)
===< pass_special :: b >===
===< pass_special :: c >===
===< pass_ints :: e >===
===< pass_clex :: rm-toks-15 >===
===< pass_clex :: rm-toks-13 >===
(37.7 %, 175 bytes)
===< pass_clex :: rm-toks-11 >===
===< pass_clex :: rm-toks-7 >===
===< pass_clex :: rm-toks-2 >===
(39.1 %, 171 bytes)
===< pass_clex :: rm-tok-pattern-4 >===
(40.6 %, 167 bytes)
(41.6 %, 164 bytes)
Termination check: size was 281; now 164
===< pass_include_includes :: 0 >===
===< pass_ternary :: b >===
===< pass_balanced :: curly2 >===
===< pass_balanced :: parens >===
===< pass_balanced :: angles-only >===
===< pass_clang :: aggregate-to-scalar >===
===< pass_clang :: local-to-global >===
===< pass_clang :: param-to-global >===
===< pass_clang :: param-to-local >===
===< pass_clang :: simple-inliner >===
===< pass_clang :: lift-assignment-expr >===
===< pass_clang :: copy-propagation >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: remove-unused-function >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-unused-var >===
===< pass_clang :: simplify-if >===
===< pass_clang :: reduce-array-dim >===
===< pass_clang :: move-function-body >===
===< pass_clang :: simplify-dependent-typedef >===
===< pass_clang :: replace-dependent-typedef >===
===< pass_clang :: template-arg-to-int >===
===< pass_clang :: class-template-to-class >===
===< pass_clang :: remove-base-class >===
===< pass_clang :: remove-unresolved-base >===
===< pass_clang :: remove-ctor-initializer >===
===< pass_clang :: remove-unused-outer-class >===
===< pass_clang :: remove-pointer-pairs >===
===< pass_clang :: remove-addr-taken >===
===< pass_clang :: simplify-recursive-template-instantiation >===
===< pass_lines :: 1 >===
(39.9 %, 169 bytes)
===< pass_special :: c >===
===< pass_ints :: b >===
===< pass_ints :: c >===
===< pass_ints :: e >===
===< pass_indent :: regular >===
(78.3 %, 61 bytes)
===< pass_clex :: rm-toks-14 >===
===< pass_clex :: rm-toks-11 >===
===< pass_clex :: rm-toks-9 >===
===< pass_clex :: rm-toks-8 >===
===< pass_clex :: rm-toks-6 >===
===< pass_clex :: rm-toks-5 >===
===< pass_clex :: rm-toks-3 >===
===< pass_clex :: rm-toks-2 >===
Termination check: size was 164; now 61
===< pass_ternary :: b >===
===< pass_ternary :: c >===
===< pass_balanced :: angles >===
===< pass_clang :: param-to-global >===
===< pass_clang :: remove-nested-function >===
===< pass_clang :: union-to-struct >===
===< pass_clang :: reduce-pointer-level >===
===< pass_clang :: lift-assignment-expr >===
===< pass_clang :: copy-propagation >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: remove-unused-function >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang :: reduce-array-dim >===
===< pass_clang :: move-function-body >===
===< pass_clang :: simplify-comma-expr >===
===< pass_clang :: replace-dependent-typedef >===
===< pass_clang :: replace-one-level-typedef-type >===
===< pass_clang :: remove-unused-field >===
===< pass_clang :: instantiate-template-type-param-to-int >===
===< pass_clang :: remove-trivial-base-template >===
===< pass_clang :: remove-base-class >===
===< pass_clang :: remove-ctor-initializer >===
===< pass_clang :: replace-class-with-base-template-spec >===
===< pass_clang :: simplify-nested-class >===
===< pass_clang :: empty-struct-to-int >===
===< pass_clang :: remove-pointer >===
===< pass_clang :: remove-pointer-pairs >===
===< pass_clang :: replace-array-index-var >===
===< pass_lines :: 1 >===
(76.2 %, 67 bytes)
===< pass_lines :: 2 >===
(74.0 %, 73 bytes)
===< pass_unifdef :: 0 >===
===< pass_special :: b >===
===< pass_special :: c >===
===< pass_ints :: a >===
===< pass_ints :: b >===
===< pass_ints :: d >===
===< pass_indent :: regular >===
(78.3 %, 61 bytes)
===< pass_clex :: rm-toks-16 >===
===< pass_clex :: rm-toks-13 >===
===< pass_clex :: rm-toks-11 >===
===< pass_clex :: rm-toks-8 >===
===< pass_clex :: rm-toks-7 >===
===< pass_clex :: rm-toks-4 >===
===< pass_clex :: rm-toks-3 >===
===< pass_clex :: rm-toks-2 >===
===< pass_clex :: rm-tok-pattern-4 >===
Termination check: size was 61; now 61
===< pass_clang :: rename-fun >===
===< pass_clang :: rename-param >===
===< pass_clang :: rename-var >===
===< pass_clang :: rename-class >===
===< pass_clang :: rename-cxx-method >===
===< pass_clang :: combine-global-var >===
===< pass_clang :: combine-local-var >===
===< pass_clang :: simplify-struct-union-decl >===
===< pass_clang :: move-global-var >===
===< pass_clang :: unify-function-decl >===
===< pass_lines :: 0 >===
(77.9 %, 62 bytes)
===< pass_clex :: delete-string >===
===< pass_indent :: final >===
(76.2 %, 67 bytes)
(78.3 %, 61 bytes)
===================== done ====================

pass statistics:
  method pass_balanced :: angles worked 0 times and failed 0 times
  method pass_balanced :: angles-only worked 0 times and failed 0 times
  method pass_balanced :: curly worked 0 times and failed 3 times
  method pass_balanced :: curly-only worked 1 times and failed 2 times
  method pass_balanced :: curly2 worked 0 times and failed 8 times
  method pass_balanced :: curly3 worked 0 times and failed 0 times
  method pass_balanced :: parens worked 1 times and failed 13 times
  method pass_balanced :: parens-only worked 0 times and failed 0 times
  method pass_blank :: 0 worked 1 times and failed 0 times
  method pass_clang :: aggregate-to-scalar worked 0 times and failed 0 times
  method pass_clang :: callexpr-to-value worked 0 times and failed 4 times
  method pass_clang :: class-template-to-class worked 0 times and failed 0 times
  method pass_clang :: combine-global-var worked 0 times and failed 0 times
  method pass_clang :: combine-local-var worked 0 times and failed 0 times
  method pass_clang :: copy-propagation worked 0 times and failed 0 times
  method pass_clang :: empty-struct-to-int worked 0 times and failed 0 times
  method pass_clang :: instantiate-template-param worked 0 times and failed 0 times
  method pass_clang :: instantiate-template-type-param-to-int worked 0 times and failed 0 times
  method pass_clang :: lift-assignment-expr worked 0 times and failed 0 times
  method pass_clang :: local-to-global worked 0 times and failed 3 times
  method pass_clang :: move-function-body worked 0 times and failed 0 times
  method pass_clang :: move-global-var worked 0 times and failed 0 times
  method pass_clang :: param-to-global worked 0 times and failed 0 times
  method pass_clang :: param-to-local worked 0 times and failed 0 times
  method pass_clang :: reduce-array-dim worked 0 times and failed 0 times
  method pass_clang :: reduce-array-size worked 0 times and failed 0 times
  method pass_clang :: reduce-class-template-param worked 0 times and failed 0 times
  method pass_clang :: reduce-pointer-level worked 0 times and failed 2 times
  method pass_clang :: remove-addr-taken worked 0 times and failed 0 times
  method pass_clang :: remove-array worked 0 times and failed 0 times
  method pass_clang :: remove-base-class worked 0 times and failed 0 times
  method pass_clang :: remove-ctor-initializer worked 0 times and failed 0 times
  method pass_clang :: remove-enum-member-value worked 0 times and failed 0 times
  method pass_clang :: remove-namespace worked 0 times and failed 0 times
  method pass_clang :: remove-nested-function worked 0 times and failed 0 times
  method pass_clang :: remove-pointer worked 0 times and failed 0 times
  method pass_clang :: remove-pointer-pairs worked 0 times and failed 0 times
  method pass_clang :: remove-trivial-base-template worked 0 times and failed 0 times
  method pass_clang :: remove-unresolved-base worked 0 times and failed 0 times
  method pass_clang :: remove-unused-enum-member worked 0 times and failed 0 times
  method pass_clang :: remove-unused-field worked 0 times and failed 0 times
  method pass_clang :: remove-unused-function worked 0 times and failed 3 times
  method pass_clang :: remove-unused-outer-class worked 0 times and failed 0 times
  method pass_clang :: remove-unused-var worked 0 times and failed 0 times
  method pass_clang :: rename-class worked 0 times and failed 0 times
  method pass_clang :: rename-cxx-method worked 0 times and failed 0 times
  method pass_clang :: rename-fun worked 0 times and failed 1 times
  method pass_clang :: rename-param worked 0 times and failed 0 times
  method pass_clang :: rename-var worked 0 times and failed 0 times
  method pass_clang :: replace-array-index-var worked 0 times and failed 0 times
  method pass_clang :: replace-callexpr worked 0 times and failed 0 times
  method pass_clang :: replace-class-with-base-template-spec worked 0 times and failed 0 times
  method pass_clang :: replace-dependent-name worked 0 times and failed 0 times
  method pass_clang :: replace-dependent-typedef worked 0 times and failed 0 times
  method pass_clang :: replace-derived-class worked 0 times and failed 0 times
  method pass_clang :: replace-one-level-typedef-type worked 0 times and failed 0 times
  method pass_clang :: replace-simple-typedef worked 0 times and failed 0 times
  method pass_clang :: replace-undefined-function worked 0 times and failed 0 times
  method pass_clang :: return-void worked 0 times and failed 0 times
  method pass_clang :: simple-inliner worked 0 times and failed 0 times
  method pass_clang :: simplify-callexpr worked 0 times and failed 4 times
  method pass_clang :: simplify-comma-expr worked 0 times and failed 0 times
  method pass_clang :: simplify-dependent-typedef worked 0 times and failed 0 times
  method pass_clang :: simplify-if worked 0 times and failed 0 times
  method pass_clang :: simplify-nested-class worked 0 times and failed 0 times
  method pass_clang :: simplify-recursive-template-instantiation worked 0 times and failed 0 times
  method pass_clang :: simplify-struct worked 0 times and failed 0 times
  method pass_clang :: simplify-struct-union-decl worked 0 times and failed 0 times
  method pass_clang :: template-arg-to-int worked 0 times and failed 0 times
  method pass_clang :: template-non-type-arg-to-int worked 0 times and failed 0 times
  method pass_clang :: unify-function-decl worked 0 times and failed 0 times
  method pass_clang :: union-to-struct worked 0 times and failed 0 times
  method pass_clang_binsrch :: remove-unused-function worked 1 times and failed 1 times
  method pass_clang_binsrch :: remove-unused-function worked 1 times and failed 1 times
  method pass_clang_binsrch :: replace-function-def-with-decl worked 0 times and failed 2 times
  method pass_clang_binsrch :: replace-function-def-with-decl worked 0 times and failed 2 times
  method pass_clex :: delete-string worked 0 times and failed 0 times
  method pass_clex :: rm-tok-pattern-4 worked 2 times and failed 448 times
  method pass_clex :: rm-toks-1 worked 0 times and failed 0 times
  method pass_clex :: rm-toks-10 worked 0 times and failed 0 times
  method pass_clex :: rm-toks-11 worked 0 times and failed 88 times
  method pass_clex :: rm-toks-12 worked 0 times and failed 0 times
  method pass_clex :: rm-toks-13 worked 1 times and failed 60 times
  method pass_clex :: rm-toks-14 worked 0 times and failed 28 times
  method pass_clex :: rm-toks-15 worked 0 times and failed 45 times
  method pass_clex :: rm-toks-16 worked 0 times and failed 28 times
  method pass_clex :: rm-toks-2 worked 1 times and failed 86 times
  method pass_clex :: rm-toks-3 worked 0 times and failed 56 times
  method pass_clex :: rm-toks-4 worked 0 times and failed 28 times
  method pass_clex :: rm-toks-5 worked 0 times and failed 28 times
  method pass_clex :: rm-toks-6 worked 0 times and failed 28 times
  method pass_clex :: rm-toks-7 worked 0 times and failed 60 times
  method pass_clex :: rm-toks-8 worked 0 times and failed 56 times
  method pass_clex :: rm-toks-9 worked 0 times and failed 28 times
  method pass_comments :: 0 worked 1 times and failed 0 times
  method pass_include_includes :: 0 worked 0 times and failed 0 times
  method pass_includes :: 0 worked 2 times and failed 0 times
  method pass_indent :: final worked 2 times and failed 0 times
  method pass_indent :: regular worked 2 times and failed 0 times
  method pass_ints :: a worked 0 times and failed 0 times
  method pass_ints :: b worked 0 times and failed 0 times
  method pass_ints :: c worked 0 times and failed 0 times
  method pass_ints :: d worked 0 times and failed 0 times
  method pass_ints :: e worked 0 times and failed 0 times
  method pass_lines :: 0 worked 4 times and failed 20 times
  method pass_lines :: 0 worked 4 times and failed 20 times
  method pass_lines :: 0 worked 4 times and failed 20 times
  method pass_lines :: 1 worked 8 times and failed 87 times
  method pass_lines :: 1 worked 8 times and failed 87 times
  method pass_lines :: 1 worked 8 times and failed 87 times
  method pass_lines :: 10 worked 4 times and failed 85 times
  method pass_lines :: 10 worked 4 times and failed 85 times
  method pass_lines :: 10 worked 4 times and failed 85 times
  method pass_lines :: 2 worked 5 times and failed 98 times
  method pass_lines :: 2 worked 5 times and failed 98 times
  method pass_lines :: 2 worked 5 times and failed 98 times
  method pass_peep :: a worked 1 times and failed 13 times
  method pass_special :: a worked 0 times and failed 0 times
  method pass_special :: b worked 0 times and failed 0 times
  method pass_special :: c worked 0 times and failed 0 times
  method pass_ternary :: b worked 0 times and failed 0 times
  method pass_ternary :: c worked 0 times and failed 0 times
  method pass_unifdef :: 0 worked 0 times and failed 0 times


          '/Users/ugurmeryem/Dropbox/mangroveL/scan-build/runs/run-1453839613.14178/sample.c' reduced to:
foo() {
  int *p = rand();
  free(p);
  free(p);
}
main() {}
